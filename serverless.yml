service: agent-mcp

frameworkVersion: '4'

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  runtime: python3.11
  region: ${env:AWS_REGION1, 'us-east-1'}
  environment:
    BEDROCK_MODEL_ID: ${env:BEDROCK_MODEL_ID, 'amazon.nova-lite-v1:0'}
    BEDROCK_MAX_TOKENS: ${env:BEDROCK_MAX_TOKENS, 512}
    BEDROCK_TEMPERATURE: ${env:BEDROCK_TEMPERATURE, 0.5}
    BEDROCK_TOP_P: ${env:BEDROCK_TOP_P, 0.8}

    SHOW_CLOUDWATCH_LOGS: ${env:SHOW_CLOUDWATCH_LOGS, 'false'}

    JPJ_COLLECTION_ID: ${env:JPJ_COLLECTION_ID}
    TNB_COLLECTION_ID: ${env:TNB_COLLECTION_ID}
    JPJ_API_KEY: ${env:JPJ_API_KEY}
    TNB_API_KEY: ${env:TNB_API_KEY}

    OCR_ANALYZE_API_URL: ${env:OCR_ANALYZE_API_URL}
    PAYMENT_CREATE_BILL_API_URL: ${env:PAYMENT_CREATE_BILL_API_URL}
    LICENSE_GENERATOR_API_URL: ${env:LICENSE_GENERATOR_API_URL}
    GENERATE_RECEIPT_API_URL: ${env:GENERATE_RECEIPT_API_URL}

    ATLAS_URI: ${env:ATLAS_URI}
    ATLAS_DB_NAME: ${env:ATLAS_DB_NAME, 'databases'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - bedrock:InvokeModel
            - bedrock:StartModelInvocation
            - bedrock:DescribeModel
          Resource:
            - arn:aws:bedrock:${env:AWS_REGION1, 'us-east-1'}::foundation-model/*
  # HTTP API-level settings (CORS) so browser clients can call the endpoints directly.
  httpApi:
    cors:
      allowedOrigins:
        - '*'
      allowedMethods:
        - GET
        - POST
        - OPTIONS
      allowedHeaders:
        - Content-Type
        - Authorization
        - X-Requested-With
      allowCredentials: false

functions:
  agent-mcp:
    handler: lambda_handler.lambda_handler
    memorySize: 2048
    timeout: 30
    events:
      - httpApi:
          path: /${self:provider.stage}/health
          method: get
      - httpApi:
          path: /${self:provider.stage}/agent-mcp
          method: post

plugins:
  - serverless-python-requirements

package:
  patterns:
    - '!**/*'
    - 'bedrock-runtime.py'
    - 'lambda_handler.py'
    - 'requirements.txt'

custom:
  pythonRequirements:
    dockerizePip: false
    zip: false
